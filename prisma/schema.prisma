// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Participante {
  id                    Int @id @default(autoincrement())
  nome                  String
  email                 String
  cargo                 String
  participanteReuniao   ParticipanteReuniao[]
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now())
}

model Categoria {
  id          Int @id @default(autoincrement())
  descricao   String
  observacao  String?
  reuniao     Reuniao[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Reuniao {
  id                    Int @id @default(autoincrement())
  visita                String
  participanteReuniao   ParticipanteReuniao[]
  data                  String
  local                 String
  categoria             Categoria @relation(fields: [categoriaId], references: [id], onDelete: Cascade)
  categoriaId           Int
  duracao               String?
  assunto               String
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now())
}

model ParticipanteReuniao {
  participanteReuniaoId   Int @id @default(autoincrement())
  formularioReuniao       Reuniao @relation(fields: [reuniaoId], references: [id], onDelete: Cascade)
  reuniaoId               Int
  participante            Participante @relation(fields: [participanteId], references: [id], onDelete: Cascade)
  participanteId          Int
  createdAt               DateTime @default(now())
  updatedAt               DateTime @default(now())
}

model Plano {
  id                    Int @id @default(autoincrement())
  descricao             String
  observacao            String?
  locacao   Locacao[]
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now())
}

model Locacao {
  id            Int @id @default(autoincrement())
  nome          String
  telefone      String
  organizacao   String
  data          String
  plano         Plano @relation(fields: [planoId], references: [id], onDelete: Cascade)
  planoId       Int
  observacao    String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
}